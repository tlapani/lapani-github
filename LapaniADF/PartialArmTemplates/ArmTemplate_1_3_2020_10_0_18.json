{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LapaniADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Azure_SqlTable_Themes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Sample",
				"linkedServiceName": {
					"referenceName": "ASQLDB_LS_Entertainment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "parent_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "load_date",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "lego",
					"table": "themes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego Themes ADSL to ASQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This dataflow loads themes data from Azure Data storage lake to Azure SQL database",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_Lego_Themes",
								"type": "DatasetReference"
							},
							"name": "ADLSLegoThemesData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Azure_SqlTable_Themes",
								"type": "DatasetReference"
							},
							"name": "ASQLLegoThemes"
						}
					],
					"transformations": [
						{
							"name": "DeriveLoadDate"
						}
					],
					"script": "\n\nsource(output(\n\t\tid as string,\n\t\tname as string,\n\t\tparent_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> ADLSLegoThemesData\nADLSLegoThemesData derive(load_date = currentDate()) ~> DeriveLoadDate\nDeriveLoadDate sink(input(\n\t\tid as integer,\n\t\tname as string,\n\t\tparent_id as integer,\n\t\tload_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tname,\n\t\tparent_id,\n\t\tload_date\n\t)) ~> ASQLLegoThemes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azure_SqlTable_Themes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Variables_ForEachLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to show how variables and foreach work in ADF.",
				"activities": [
					{
						"name": "Setting File variable",
						"description": "Assigning array to File variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": [
								"colors",
								"inventories",
								"inventory_parts",
								"part_categories",
								"parts",
								"sets",
								"themes"
							]
						}
					},
					{
						"name": "Whether to load all files",
						"description": "Condition decides whether we loading all files or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Setting File variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.LoadAllFiles",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Appending files variable",
									"description": "Appending one file name into existing array contained by variable",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "inventory_sets"
									}
								},
								{
									"name": "Appending Files variable again",
									"description": "Appending one more filename into existing list of filenames",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "part_relationships"
									}
								}
							]
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Whether to load all files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Files')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Lego_HTTP_to_ADSL Pipeline",
									"description": "Execute Dynamic Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_To_ADLS_Dynamic",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool"
					}
				},
				"variables": {
					"Files": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Lego_ConfigurationFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Configuration file will be used as source dataset in a lookup",
				"linkedServiceName": {
					"referenceName": "ADLS_lapaniazuredatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "LegoConfigurationFile.csv",
						"fileSystem": "lego"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Lookup_ConfigFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lookup using configuration file as source dataset",
				"activities": [
					{
						"name": "Lookup Configuration File",
						"description": "Lookup using configuration File as source dataset",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ADLS_Lego_ConfigurationFile",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLS_Lego_ConfigurationFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Lego_ConfigurationTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ASQLDB_LS_Entertainment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceSystem",
						"type": "varchar"
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					},
					{
						"name": "SourceFileExtension",
						"type": "varchar"
					},
					{
						"name": "IsActive",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "etl",
					"table": "ConfigurationTable"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Lookup_ConfigTableASQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lookup using Azure SQL database table as source dataset",
				"activities": [
					{
						"name": "Lookup Configuration Table",
						"description": "Lookup using configuration table as source dataset",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from etl.ConfigurationTable where isactive=1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "Azure_Lego_ConfigurationTable",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azure_Lego_ConfigurationTable')]"
			]
		}
	]
}