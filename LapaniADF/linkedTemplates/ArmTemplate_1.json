{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LapaniADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Lego_HTTP_to_ADLS_Themes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy themes.csv from rebrickable to Azure Data Lake Storage",
				"activities": [
					{
						"name": "Copy themes file from http to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "themes.csv"
							},
							{
								"name": "Destination",
								"value": "lego//themes.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "ADLB_lapaniazureblob",
									"type": "LinkedServiceReference"
								},
								"path": "lego/errors/themes"
							}
						},
						"inputs": [
							{
								"referenceName": "HTTP_Lego_Themes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_Lego_Themes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"Pipeline copying data from HTTPD to ADLS"
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_Viyan_CCICPC0NZ72M')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset to import themes data from ADLS to local SQL server Viyan database table lego.themes",
				"linkedServiceName": {
					"referenceName": "SqlServer_Viyandb_CCICPC0NZ72M",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "parent_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "lego",
					"table": "themes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego Themes ADSL to ASQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This dataflow loads themes data from Azure Data storage lake to Azure SQL database",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_Lego_Themes",
								"type": "DatasetReference"
							},
							"name": "ADLSLegoThemesData",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ASQLDB_Lego_Themes",
								"type": "DatasetReference"
							},
							"name": "ASQLLegoThemes"
						}
					],
					"transformations": [
						{
							"name": "DeriveLoadDate"
						}
					],
					"script": "\n\nsource(output(\n\t\tid as string,\n\t\tname as string,\n\t\tparent_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> ADLSLegoThemesData\nADLSLegoThemesData derive(load_date = currentDate()) ~> DeriveLoadDate\nDeriveLoadDate sink(input(\n\t\tid as integer,\n\t\tname as string,\n\t\tparent_id as integer,\n\t\tload_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tname,\n\t\tparent_id,\n\t\tload_date\n\t)) ~> ASQLLegoThemes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLEmpTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Emp table data from On-premise SQL server table",
				"linkedServiceName": {
					"referenceName": "SqlServer_Viyandb_CCICPC0NZ72M",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "job",
						"type": "varchar"
					},
					{
						"name": "mgr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hiredate",
						"type": "date"
					},
					{
						"name": "sal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_to_ASQLDataWarehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load data into Azure SQL Data Warehouse (Azure Synapse Analytics)",
				"activities": [
					{
						"name": "ASQLDB_to_ASQLDataWarehouse",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "lego.themes"
							},
							{
								"name": "Destination",
								"value": "."
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ADLB_lapaniazureblob",
									"type": "LinkedServiceReference"
								},
								"path": "sqltableasfile"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "parent_id",
											"type": "Int32"
										},
										"sink": {
											"name": "parent_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "load_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "load_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ASQLDB_Lego_Themes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "A dataset pointing to dummy table in SQL server ",
				"linkedServiceName": {
					"referenceName": "SqlServer_Viyandb_CCICPC0NZ72M",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FakeTableName"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_ADLS_to_ASQL_Themes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to execute dataflow Lego Themes ADSL to ASQL which extracts themes data from Azure Data Storage Lake and loads into Azure SQL database.",
				"activities": [
					{
						"name": "Lego Themes ADSL to ASQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Lego Themes ADSL to ASQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADLSLegoThemesData": {},
									"ASQLLegoThemes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Lego Themes ADSL to ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_ADLS_to_OnPremiseSQLServer_Themes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy themes data from Azure Data Storage Lake to Viyan database table lego.themse running on local sql server.\n\nUse of procedure is not required on sink tab at all.  Procedure has been used to show how to use it.",
				"activities": [
					{
						"name": "ADLS_to_SqlServer",
						"description": "Copying data from ADLS to SQlserver. Currently dataflows are supported only between clouds so using copy data activity as alternate.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"sqlWriterStoredProcedureName": "[[lego].[merge_themes]",
								"sqlWriterTableType": "lego.TableTypeThemes",
								"storedProcedureTableTypeParameterName": "var_tabletype_themes"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "parent_id",
											"type": "String"
										},
										"sink": {
											"name": "parent_id",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADLS_Lego_Themes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServer_Viyan_CCICPC0NZ72M",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServer_Viyan_CCICPC0NZ72M')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTrigEvery2Month')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Run a pipeline on each 4th Saturday  after 2 month and continue this until 2 years",
				"annotations": [
					"FourthSundayOfMonthAt2AM"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Lego_HTTP_to_ADLS_Themes",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 2,
						"startTime": "2019-12-27T16:08:00Z",
						"endTime": "2021-12-27T16:08:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"monthlyOccurrences": [
								{
									"day": "Saturday",
									"occurrence": 4
								}
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Lego_HTTP_to_ADLS_Themes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Variables_ForEachLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to show how variables and foreach work in ADF.",
				"activities": [
					{
						"name": "Setting File variable",
						"description": "Assigning array to File variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": [
								"colors",
								"inventories",
								"inventory_parts",
								"part_categories",
								"parts",
								"sets",
								"themes"
							]
						}
					},
					{
						"name": "Whether to load all files",
						"description": "Condition decides whether we loading all files or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Setting File variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.LoadAllFiles",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Appending files variable",
									"description": "Appending one file name into existing array contained by variable",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "inventory_sets"
									}
								},
								{
									"name": "Appending Files variable again",
									"description": "Appending one more filename into existing list of filenames",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "part_relationships"
									}
								}
							]
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Whether to load all files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Files')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Lego_HTTP_to_ADSL Pipeline",
									"description": "Execute Dynamic Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_To_ADLS_Dynamic",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool"
					}
				},
				"variables": {
					"Files": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Lookup_ConfigFile_FirstRow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lookup using configuration file as source dataset but processing only first row",
				"activities": [
					{
						"name": "Lookup ConfigFileADSL",
						"description": "Lookup using configuration File as source dataset",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ADLS_Lego_ConfigurationFile",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "HTTP_Lego_Dynamic",
						"description": "Run existing pipeline dynamically by passing filename (received from Lookup activity) as parameter  to pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup ConfigFileADSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lego_HTTP_To_ADLS_Dynamic",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileName": {
									"value": "@activity('Lookup ConfigFileADSL').output.firstRow.SourceFileName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Lookup_ConfigTable_AllRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lookup using Azure SQL database table as source dataset and process all rows",
				"activities": [
					{
						"name": "Lookup Configuration Table",
						"description": "Lookup using configuration table as source dataset to process all rows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from etl.ConfigurationTable where isactive=1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ASQLDB_Lego_ConfigurationTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach File",
						"description": "Loop through each lookup output row",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Configuration Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Configuration Table').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "HTTP_to_ADLS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_To_ADLS_Dynamic",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": "@item().SourceFileName"
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Lookup_ConfigFile_AllRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Lookup using configuration file as source dataset but processing ALL rows",
				"activities": [
					{
						"name": "Lookup ConfigFileADSL",
						"description": "Lookup using configuration File as source dataset",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ADLS_Lego_ConfigurationFile",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach file",
						"description": "ForEach activity will receive input (lookup output) in form of array because lookup is configured to return all rows and not first row only.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Active Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Active Files').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"description": "Run existing pipeline dynamically by passing one filename (received from Lookup activity) at a time as parameter  to pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_To_ADLS_Dynamic",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item().SourceFileName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter Active Files",
						"description": "Filter lookup output based on IsActive column or field. Here we keeping rows which has IsActive value 1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup ConfigFileADSL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup ConfigFileADSL').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsActive,'1')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremise_Emp_SQL_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copying EMP table data from SQL server on premise database to ADLS",
				"activities": [
					{
						"name": "CopyFromOnPremiseSqlToAzureBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.emp"
							},
							{
								"name": "Destination",
								"value": "sqltableasfile//emp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "empno",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "ename",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "job",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "mgr",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "hiredate",
											"type": "DateTime"
										},
										"sink": {
											"type": "DateTime",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "sal",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "comm",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "deptno",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 8
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "OnPremiseSQLEmpTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLB_Emp_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPremiseSQLEmpTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLtoASQLGetTableListAndRunCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get list of tables from on-premise SQL server database and then trigger another pipeline to copy those tables to Azure SQL database",
				"activities": [
					{
						"name": "LookupTableList",
						"description": "Getting list of tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES \nwhere TABLE_SCHEMA='dbo'",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "SqlServerDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerDataset')]"
			]
		}
	]
}